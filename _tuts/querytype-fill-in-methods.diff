diff --git a/src/Layouts/LatestRecipeQueryTypeHandler.php b/src/Layouts/LatestRecipeQueryTypeHandler.php
index ffca512..bf8e231 100644
--- a/src/Layouts/LatestRecipeQueryTypeHandler.php
+++ b/src/Layouts/LatestRecipeQueryTypeHandler.php
@@ -2,29 +2,40 @@
 
 namespace App\Layouts;
 
+use App\Repository\RecipeRepository;
 use Netgen\Layouts\API\Values\Collection\Query;
 use Netgen\Layouts\Collection\QueryType\QueryTypeHandlerInterface;
 use Netgen\Layouts\Parameters\ParameterBuilderInterface;
 
 class LatestRecipeQueryTypeHandler implements QueryTypeHandlerInterface
 {
+    public function __construct(private RecipeRepository $recipeRepository)
+    {
+    }
+
     public function buildParameters(ParameterBuilderInterface $builder): void
     {
-        // TODO: Implement buildParameters() method.
     }
 
     public function getValues(Query $query, int $offset = 0, ?int $limit = null): iterable
     {
-        // TODO: Implement getValues() method.
+        return $this->recipeRepository->createQueryBuilderOrderedByNewest()
+            ->setFirstResult($offset)
+            ->setMaxResults($limit)
+            ->getQuery()
+            ->getResult();
     }
 
     public function getCount(Query $query): int
     {
-        // TODO: Implement getCount() method.
+        return $this->recipeRepository->createQueryBuilderOrderedByNewest()
+            ->select('COUNT(recipe.id)')
+            ->getQuery()
+            ->getSingleScalarResult();
     }
 
     public function isContextual(Query $query): bool
     {
-        // TODO: Implement isContextual() method.
+        return false;
     }
 }
